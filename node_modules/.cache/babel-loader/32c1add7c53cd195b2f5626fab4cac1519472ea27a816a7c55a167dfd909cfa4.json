{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prat5\\\\Documents\\\\supabase-project\\\\inventory-dashboard\\\\src\\\\components\\\\StockControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockControls = ({\n  ingredient,\n  setIngredients\n}) => {\n  _s();\n  const [amount, setAmount] = useState(1);\n  const updateStock = async action => {\n    if (amount <= 0) return;\n    try {\n      const url = `http://127.0.0.1:8000/${action}/${ingredient.barcode}`;\n      const response = await axios.patch(url, {\n        amount: parseFloat(amount)\n      });\n      if (response.status === 200) {\n        setIngredients(prevIngredients => prevIngredients.map(ing => ing.barcode === ingredient.barcode ? {\n          ...ing,\n          num_containers: ing.num_containers + (action === \"increase\" ? amount : -amount)\n        } : ing));\n      }\n    } catch (error) {\n      console.error(`Error updating stock (${action}):`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"5px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      min: \"1\",\n      onChange: e => setAmount(parseInt(e.target.value) || 1),\n      style: {\n        width: \"50px\",\n        textAlign: \"center\",\n        borderRadius: \"5px\",\n        border: \"1px solid #ccc\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateStock(\"increase\"),\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        width: \"30px\",\n        height: \"30px\",\n        fontSize: \"20px\",\n        cursor: \"pointer\"\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateStock(\"decrease\"),\n      style: {\n        backgroundColor: \"red\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        width: \"30px\",\n        height: \"30px\",\n        fontSize: \"20px\",\n        cursor: \"pointer\"\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(StockControls, \"pb83c0ei2UNI+SKCxAC3PRIzrh4=\");\n_c = StockControls;\nexport default StockControls;\nvar _c;\n$RefreshReg$(_c, \"StockControls\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","StockControls","ingredient","setIngredients","_s","amount","setAmount","updateStock","action","url","barcode","response","patch","parseFloat","status","prevIngredients","map","ing","num_containers","error","console","style","display","alignItems","gap","children","type","value","min","onChange","e","parseInt","target","width","textAlign","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","height","fontSize","cursor","_c","$RefreshReg$"],"sources":["C:/Users/prat5/Documents/supabase-project/inventory-dashboard/src/components/StockControls.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst StockControls = ({ ingredient, setIngredients }) => {\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  const updateStock = async (action) => {\r\n    if (amount <= 0) return;\r\n\r\n    try {\r\n      const url = `http://127.0.0.1:8000/${action}/${ingredient.barcode}`;\r\n      const response = await axios.patch(url, { amount: parseFloat(amount) });\r\n\r\n      if (response.status === 200) {\r\n        setIngredients((prevIngredients) =>\r\n          prevIngredients.map((ing) =>\r\n            ing.barcode === ingredient.barcode\r\n              ? { ...ing, num_containers: ing.num_containers + (action === \"increase\" ? amount : -amount) }\r\n              : ing\r\n          )\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error updating stock (${action}):`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\r\n      <input\r\n        type=\"number\"\r\n        value={amount}\r\n        min=\"1\"\r\n        onChange={(e) => setAmount(parseInt(e.target.value) || 1)}\r\n        style={{\r\n          width: \"50px\",\r\n          textAlign: \"center\",\r\n          borderRadius: \"5px\",\r\n          border: \"1px solid #ccc\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={() => updateStock(\"increase\")}\r\n        style={{\r\n          backgroundColor: \"green\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          width: \"30px\",\r\n          height: \"30px\",\r\n          fontSize: \"20px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      <button\r\n        onClick={() => updateStock(\"decrease\")}\r\n        style={{\r\n          backgroundColor: \"red\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          width: \"30px\",\r\n          height: \"30px\",\r\n          fontSize: \"20px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        -\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}