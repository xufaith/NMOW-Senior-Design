{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prat5\\\\Documents\\\\GitHub\\\\NMOW-Senior-Design\\\\inventory-dashboard\\\\src\\\\components\\\\MenuSubstitutions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Form, Button, Accordion, Card, ListGroup, Badge } from \"react-bootstrap\";\nimport \"./MenuSubstitutions.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\nconst categoryFilters = {\n  protein: [\"Protein Entree\", \"Starch and Protein Entree\", \"Canned Entree\"],\n  hotSide: [\"Vegetable\", \"Starch\", \"Beans\", \"Starch and Protein Entree\", \"Canned Entree\"],\n  dessertSnack: [\"Dessert\", \"Snack\"],\n  fruitSalad: [{\n    category: \"Fruit\",\n    storage: [\"Dry\", \"Fridge\"]\n  }, {\n    category: \"Vegetable\",\n    storage: [\"Fridge\"]\n  }],\n  fruitSnack: [{\n    category: \"Fruit\",\n    storage: [\"Dry\", \"Fridge\"]\n  }, {\n    category: \"Snack\"\n  }],\n  sauce: [\"Sauce\"]\n};\nconst filterIngredients = (ingredients, filterSet) => {\n  return ingredients.filter(item => {\n    if (Array.isArray(filterSet)) {\n      return filterSet.some(f => {\n        if (typeof f === \"string\") {\n          return item.item_category === f;\n        } else {\n          return item.item_category === f.category && (!f.storage || f.storage.includes(item.storage_type));\n        }\n      });\n    }\n    return false;\n  });\n};\nconst MenuSubstitutions = () => {\n  _s();\n  const [menu, setMenu] = useState({});\n  const [mealsPerDay, setMealsPerDay] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [results, setResults] = useState({});\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/ingredients\");\n        if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\n          setIngredients(response.data.ingredients);\n        }\n      } catch (error) {\n        console.error(\"Error fetching ingredients:\", error);\n      }\n    };\n    fetchIngredients();\n  }, []);\n  const handleSelect = (day, mealType, field, selectedOption) => {\n    setMenu(prev => {\n      var _prev$day;\n      return {\n        ...prev,\n        [day]: {\n          ...prev[day],\n          [mealType]: {\n            ...((_prev$day = prev[day]) === null || _prev$day === void 0 ? void 0 : _prev$day[mealType]),\n            [field]: selectedOption ? selectedOption.value : null\n          }\n        }\n      };\n    });\n  };\n  const renderSelect = (day, mealType, field, label, options, isOptional = false) => {\n    var _menu$day, _menu$day$mealType;\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [label, \" \", isOptional && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \"(optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        isClearable: isOptional,\n        options: options.map(i => ({\n          value: i.ingredient_name,\n          label: i.ingredient_name\n        })),\n        value: (_menu$day = menu[day]) !== null && _menu$day !== void 0 && (_menu$day$mealType = _menu$day[mealType]) !== null && _menu$day$mealType !== void 0 && _menu$day$mealType[field] ? {\n          value: menu[day][mealType][field],\n          label: menu[day][mealType][field]\n        } : null,\n        onChange: option => handleSelect(day, mealType, field, option),\n        isSearchable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n  };\n  const handleCheckFeasibility = async () => {\n    try {\n      const payload = {\n        menu,\n        meals_per_day: mealsPerDay\n      };\n      const response = await axios.post(\"http://127.0.0.1:8000/check_feasibility\", payload);\n      if (response.data && response.data.results) {\n        setResults(response.data.results);\n      }\n    } catch (error) {\n      console.error(\"Error checking feasibility:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Menu Substitutions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: \"Select ingredients and check feasibility across the week.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      children: weekdays.map((day, index) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: index.toString(),\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"# of Meals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"1\",\n              value: mealsPerDay[day] || \"\",\n              onChange: e => setMealsPerDay({\n                ...mealsPerDay,\n                [day]: parseInt(e.target.value || 0)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Hot Tray\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), renderSelect(day, \"hot\", \"protein\", \"Protein\", filterIngredients(ingredients, categoryFilters.protein)), renderSelect(day, \"hot\", \"hot_side_1\", \"Hot Side 1\", filterIngredients(ingredients, categoryFilters.hotSide)), renderSelect(day, \"hot\", \"hot_side_2\", \"Hot Side 2\", filterIngredients(ingredients, categoryFilters.hotSide)), renderSelect(day, \"hot\", \"sauce_hot\", \"Sauce\", filterIngredients(ingredients, categoryFilters.sauce), true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Cold Tray\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), renderSelect(day, \"cold\", \"dessert_snack\", \"Dessert/Snack\", filterIngredients(ingredients, categoryFilters.dessertSnack)), renderSelect(day, \"cold\", \"fruit_salad\", \"Fruit/Salad\", filterIngredients(ingredients, categoryFilters.fruitSalad)), renderSelect(day, \"cold\", \"fruit_snack\", \"Fruit/Snack\", filterIngredients(ingredients, categoryFilters.fruitSnack)), renderSelect(day, \"cold\", \"sauce_cold\", \"Sauce\", filterIngredients(ingredients, categoryFilters.sauce), true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"my-4 w-100\",\n      variant: \"primary\",\n      onClick: handleCheckFeasibility,\n      children: \"Check Feasibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), Object.keys(results).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"substitutions-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"Substitution Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), Object.entries(results).map(([day, trays]) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"bg-info text-white\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: Object.entries(trays).map(([trayType, fields]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: trayType.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: Object.entries(fields).filter(([_, result]) => trayType === \"hot\" ? result.status !== \"missing\" : trayType === \"cold\" && result.status !== \"missing\").map(([field, result], idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [field.replace(/_/g, \" \"), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 29\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: result.status === \"sufficient\" ? \"success\" : result.status === \"insufficient\" ? \"warning\" : \"secondary\",\n                  children: result.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 29\n                }, this), \" • \", result.status === \"sufficient\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [result.servings_available, \" available / \", result.needed, \" needed\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 31\n                }, this), result.status === \"insufficient\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-1 mb-1\",\n                    children: [result.servings_available, \" available / \", result.needed, \" needed\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: result.substitutions.map((sub, i) => /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      label: `${sub.ingredient_name} — ${sub.servings} servings ${sub.expires ? `(Expires: ${sub.expires})` : \"\"}`\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 37\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true), result.status === \"not_found\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 63\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this)]\n          }, trayType, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuSubstitutions, \"W+EOFVrsa1j3JXl90hoIf3YkjpQ=\");\n_c = MenuSubstitutions;\nexport default MenuSubstitutions;\nvar _c;\n$RefreshReg$(_c, \"MenuSubstitutions\");","map":{"version":3,"names":["React","useState","useEffect","Select","axios","Container","Row","Col","Form","Button","Accordion","Card","ListGroup","Badge","jsxDEV","_jsxDEV","Fragment","_Fragment","weekdays","categoryFilters","protein","hotSide","dessertSnack","fruitSalad","category","storage","fruitSnack","sauce","filterIngredients","ingredients","filterSet","filter","item","Array","isArray","some","f","item_category","includes","storage_type","MenuSubstitutions","_s","menu","setMenu","mealsPerDay","setMealsPerDay","setIngredients","results","setResults","fetchIngredients","response","get","data","error","console","handleSelect","day","mealType","field","selectedOption","prev","_prev$day","value","renderSelect","label","options","isOptional","_menu$day","_menu$day$mealType","Group","className","children","Label","fileName","_jsxFileName","lineNumber","columnNumber","isClearable","map","i","ingredient_name","onChange","option","isSearchable","handleCheckFeasibility","payload","meals_per_day","post","defaultActiveKey","index","Item","eventKey","toString","Header","Body","Control","type","min","e","parseInt","target","md","variant","onClick","Object","keys","length","entries","trays","trayType","fields","toUpperCase","_","result","status","idx","replace","bg","servings_available","needed","substitutions","sub","Check","servings","expires","message","_c","$RefreshReg$"],"sources":["C:/Users/prat5/Documents/GitHub/NMOW-Senior-Design/inventory-dashboard/src/components/MenuSubstitutions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Accordion,\r\n  Card,\r\n  ListGroup,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport \"./MenuSubstitutions.css\";\r\n\r\nconst weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n\r\nconst categoryFilters = {\r\n  protein: [\"Protein Entree\", \"Starch and Protein Entree\", \"Canned Entree\"],\r\n  hotSide: [\r\n    \"Vegetable\",\r\n    \"Starch\",\r\n    \"Beans\",\r\n    \"Starch and Protein Entree\",\r\n    \"Canned Entree\",\r\n  ],\r\n  dessertSnack: [\"Dessert\", \"Snack\"],\r\n  fruitSalad: [\r\n    { category: \"Fruit\", storage: [\"Dry\", \"Fridge\"] },\r\n    { category: \"Vegetable\", storage: [\"Fridge\"] },\r\n  ],\r\n  fruitSnack: [\r\n    { category: \"Fruit\", storage: [\"Dry\", \"Fridge\"] },\r\n    { category: \"Snack\" },\r\n  ],\r\n  sauce: [\"Sauce\"],\r\n};\r\n\r\nconst filterIngredients = (ingredients, filterSet) => {\r\n  return ingredients.filter((item) => {\r\n    if (Array.isArray(filterSet)) {\r\n      return filterSet.some((f) => {\r\n        if (typeof f === \"string\") {\r\n          return item.item_category === f;\r\n        } else {\r\n          return (\r\n            item.item_category === f.category &&\r\n            (!f.storage || f.storage.includes(item.storage_type))\r\n          );\r\n        }\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n};\r\n\r\nconst MenuSubstitutions = () => {\r\n  const [menu, setMenu] = useState({});\r\n  const [mealsPerDay, setMealsPerDay] = useState({});\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [results, setResults] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchIngredients = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/ingredients\");\r\n        if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\r\n          setIngredients(response.data.ingredients);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching ingredients:\", error);\r\n      }\r\n    };\r\n    fetchIngredients();\r\n  }, []);\r\n\r\n  const handleSelect = (day, mealType, field, selectedOption) => {\r\n    setMenu((prev) => ({\r\n      ...prev,\r\n      [day]: {\r\n        ...prev[day],\r\n        [mealType]: {\r\n          ...prev[day]?.[mealType],\r\n          [field]: selectedOption ? selectedOption.value : null,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const renderSelect = (day, mealType, field, label, options, isOptional = false) => (\r\n    <Form.Group className=\"mb-2\">\r\n      <Form.Label>\r\n        {label} {isOptional && <span className=\"text-muted\">(optional)</span>}\r\n      </Form.Label>\r\n      <Select\r\n        isClearable={isOptional}\r\n        options={options.map((i) => ({\r\n          value: i.ingredient_name,\r\n          label: i.ingredient_name,\r\n        }))}\r\n        value={\r\n          menu[day]?.[mealType]?.[field]\r\n            ? { value: menu[day][mealType][field], label: menu[day][mealType][field] }\r\n            : null\r\n        }\r\n        onChange={(option) => handleSelect(day, mealType, field, option)}\r\n        isSearchable\r\n      />\r\n    </Form.Group>\r\n  );\r\n\r\n  const handleCheckFeasibility = async () => {\r\n    try {\r\n      const payload = { menu, meals_per_day: mealsPerDay };\r\n      const response = await axios.post(\"http://127.0.0.1:8000/check_feasibility\", payload);\r\n      if (response.data && response.data.results) {\r\n        setResults(response.data.results);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error checking feasibility:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <h2 className=\"mb-3\">Menu Substitutions</h2>\r\n      <p className=\"text-muted\">Select ingredients and check feasibility across the week.</p>\r\n\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {weekdays.map((day, index) => (\r\n          <Accordion.Item eventKey={index.toString()} key={day}>\r\n            <Accordion.Header>{day}</Accordion.Header>\r\n            <Accordion.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label># of Meals:</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={mealsPerDay[day] || \"\"}\r\n                  onChange={(e) =>\r\n                    setMealsPerDay({ ...mealsPerDay, [day]: parseInt(e.target.value || 0) })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h5>Hot Tray</h5>\r\n                  {renderSelect(day, \"hot\", \"protein\", \"Protein\", filterIngredients(ingredients, categoryFilters.protein))}\r\n                  {renderSelect(day, \"hot\", \"hot_side_1\", \"Hot Side 1\", filterIngredients(ingredients, categoryFilters.hotSide))}\r\n                  {renderSelect(day, \"hot\", \"hot_side_2\", \"Hot Side 2\", filterIngredients(ingredients, categoryFilters.hotSide))}\r\n                  {renderSelect(day, \"hot\", \"sauce_hot\", \"Sauce\", filterIngredients(ingredients, categoryFilters.sauce), true)}\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <h5>Cold Tray</h5>\r\n                  {renderSelect(day, \"cold\", \"dessert_snack\", \"Dessert/Snack\", filterIngredients(ingredients, categoryFilters.dessertSnack))}\r\n                  {renderSelect(day, \"cold\", \"fruit_salad\", \"Fruit/Salad\", filterIngredients(ingredients, categoryFilters.fruitSalad))}\r\n                  {renderSelect(day, \"cold\", \"fruit_snack\", \"Fruit/Snack\", filterIngredients(ingredients, categoryFilters.fruitSnack))}\r\n                  {renderSelect(day, \"cold\", \"sauce_cold\", \"Sauce\", filterIngredients(ingredients, categoryFilters.sauce), true)}\r\n                </Col>\r\n              </Row>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        ))}\r\n      </Accordion>\r\n\r\n      <Button className=\"my-4 w-100\" variant=\"primary\" onClick={handleCheckFeasibility}>\r\n        Check Feasibility\r\n      </Button>\r\n\r\n      {Object.keys(results).length > 0 && (\r\n        <div className=\"substitutions-section\">\r\n          <h4 className=\"mb-3\">Substitution Suggestions</h4>\r\n          {Object.entries(results).map(([day, trays]) => (\r\n            <Card className=\"mb-3\" key={day}>\r\n              <Card.Header className=\"bg-info text-white\">{day}</Card.Header>\r\n              <Card.Body>\r\n                {Object.entries(trays).map(([trayType, fields]) => (\r\n                  <div key={trayType}>\r\n                    <h6>{trayType.toUpperCase()}</h6>\r\n                    <ListGroup variant=\"flush\">\r\n                      {Object.entries(fields)\r\n                        .filter(([_, result]) => trayType === \"hot\" ? result.status !== \"missing\" : trayType === \"cold\" && result.status !== \"missing\")\r\n                        .map(([field, result], idx) => (\r\n                          <ListGroup.Item key={idx}>\r\n                            <strong>{field.replace(/_/g, \" \")}:</strong>{\" \"}\r\n                            <Badge bg={result.status === \"sufficient\" ? \"success\" : result.status === \"insufficient\" ? \"warning\" : \"secondary\"}>\r\n                              {result.status}\r\n                            </Badge>\r\n                            {\" • \"}\r\n                            {result.status === \"sufficient\" && (\r\n                              <span>\r\n                                {result.servings_available} available / {result.needed} needed\r\n                              </span>\r\n                            )}\r\n                            {result.status === \"insufficient\" && (\r\n                              <>\r\n                                <div className=\"mt-1 mb-1\">\r\n                                  {result.servings_available} available / {result.needed} needed\r\n                                </div>\r\n                                <div>\r\n                                  {result.substitutions.map((sub, i) => (\r\n                                    <Form.Check\r\n                                      key={i}\r\n                                      type=\"checkbox\"\r\n                                      label={`${sub.ingredient_name} — ${sub.servings} servings ${sub.expires ? `(Expires: ${sub.expires})` : \"\"}`}\r\n                                    />\r\n                                  ))}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                            {result.status === \"not_found\" && <div>{result.message}</div>}\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                  </div>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MenuSubstitutions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}