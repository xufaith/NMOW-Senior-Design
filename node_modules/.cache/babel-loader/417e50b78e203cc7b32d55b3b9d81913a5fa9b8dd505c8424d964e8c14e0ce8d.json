{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prat5\\\\Documents\\\\supabase-project\\\\inventory-dashboard\\\\src\\\\components\\\\ExpirationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpirationPage = () => {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/ingredients\").then(response => {\n      if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\n        const today = new Date();\n        const oneMonthLater = new Date();\n        oneMonthLater.setMonth(today.getMonth() + 1);\n\n        // Filter ingredients that expire within the next month\n        const filtered = response.data.ingredients.filter(ing => {\n          const expDate = new Date(ing.expiration_date);\n          return expDate <= oneMonthLater;\n        });\n\n        // Sort by expiration date (earliest first)\n        filtered.sort((a, b) => new Date(a.expiration_date) - new Date(b.expiration_date));\n        setIngredients(filtered);\n      }\n    }).catch(error => console.error(\"Error fetching ingredients:\", error));\n  }, []);\n\n  // Determine row color based on expiration date\n  const getRowColor = expDate => {\n    const today = new Date();\n    const expiry = new Date(expDate);\n    const daysLeft = (expiry - today) / (1000 * 60 * 60 * 24);\n    if (daysLeft < 7) return \"expiring-soon\"; // Red (Less than a week)\n    if (daysLeft < 14) return \"expiring-warning\"; // Yellow (1-2 weeks)\n    return \"\"; // Default\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expiring Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Storage Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: getRowColor(ingredient.expiration_date),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.ingredient_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.num_containers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.container_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.storage_location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [ingredient.expiring_servings, \" / \", ingredient.num_containers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(ingredient.expiration_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, ingredient.barcode, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items are expiring soon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpirationPage, \"uMtY1mJVgguGfhq6h4p5o8ejUzk=\");\n_c = ExpirationPage;\nexport default ExpirationPage;\nvar _c;\n$RefreshReg$(_c, \"ExpirationPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ExpirationPage","_s","ingredients","setIngredients","get","then","response","data","Array","isArray","today","Date","oneMonthLater","setMonth","getMonth","filtered","filter","ing","expDate","expiration_date","sort","a","b","catch","error","console","getRowColor","expiry","daysLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ingredient","className","ingredient_name","brand","num_containers","container_type","storage_location","expiring_servings","toLocaleDateString","barcode","_c","$RefreshReg$"],"sources":["C:/Users/prat5/Documents/supabase-project/inventory-dashboard/src/components/ExpirationPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ExpirationPage = () => {\r\n    const [ingredients, setIngredients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://127.0.0.1:8000/ingredients\")\r\n            .then((response) => {\r\n                if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\r\n                    const today = new Date();\r\n                    const oneMonthLater = new Date();\r\n                    oneMonthLater.setMonth(today.getMonth() + 1);\r\n\r\n                    // Filter ingredients that expire within the next month\r\n                    const filtered = response.data.ingredients.filter((ing) => {\r\n                        const expDate = new Date(ing.expiration_date);\r\n                        return expDate <= oneMonthLater;\r\n                    });\r\n\r\n                    // Sort by expiration date (earliest first)\r\n                    filtered.sort((a, b) => new Date(a.expiration_date) - new Date(b.expiration_date));\r\n\r\n                    setIngredients(filtered);\r\n                }\r\n            })\r\n            .catch((error) => console.error(\"Error fetching ingredients:\", error));\r\n    }, []);\r\n\r\n    // Determine row color based on expiration date\r\n    const getRowColor = (expDate) => {\r\n        const today = new Date();\r\n        const expiry = new Date(expDate);\r\n        const daysLeft = (expiry - today) / (1000 * 60 * 60 * 24);\r\n\r\n        if (daysLeft < 7) return \"expiring-soon\";  // Red (Less than a week)\r\n        if (daysLeft < 14) return \"expiring-warning\";  // Yellow (1-2 weeks)\r\n        return \"\"; // Default\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Expiring Ingredients</h2>\r\n            {ingredients.length > 0 ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Brand</th>\r\n                            <th>Quantity</th>\r\n                            <th>Container</th>\r\n                            <th>Storage Location</th>\r\n                            <th>Expiring</th>\r\n                            <th>Expiration Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ingredients.map((ingredient) => (\r\n                            <tr key={ingredient.barcode} className={getRowColor(ingredient.expiration_date)}>\r\n                                <td>{ingredient.ingredient_name}</td>\r\n                                <td>{ingredient.brand}</td>\r\n                                <td>{ingredient.num_containers}</td>\r\n                                <td>{ingredient.container_type}</td>\r\n                                <td>{ingredient.storage_location}</td>\r\n                                <td>{ingredient.expiring_servings} / {ingredient.num_containers}</td>\r\n                                <td>{new Date(ingredient.expiration_date).toLocaleDateString()}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No items are expiring soon.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpirationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}