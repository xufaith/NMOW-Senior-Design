{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prat5\\\\Documents\\\\supabase-project\\\\inventory-dashboard\\\\src\\\\components\\\\ExpirationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpirationList = () => {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/ingredients\").then(response => {\n      if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\n        const sortedIngredients = response.data.ingredients.sort((a, b) => new Date(a.expiration_date) - new Date(b.expiration_date));\n        setIngredients(sortedIngredients);\n      } else {\n        console.error(\"Invalid data format:\", response.data);\n        setIngredients([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching ingredients:\", error);\n      setIngredients([]);\n    });\n  }, []);\n\n  // Function to determine row color based on expiration date\n  const getRowClass = expirationDate => {\n    const today = new Date();\n    const expDate = new Date(expirationDate);\n    const diffDays = Math.ceil((expDate - today) / (1000 * 60 * 60 * 24));\n    if (diffDays < 7) return \"expiring-soon\"; // ðŸ”´ Red\n    if (diffDays <= 14) return \"expiring-warning\"; // ðŸŸ¡ Yellow\n    return \"\"; // Default (No color)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expiration Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiring Servings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Servings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: getRowClass(ingredient.expiration_date),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.ingredient_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [ingredient.expiring_servings, \"/\", ingredient.total_servings]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.total_servings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(ingredient.expiration_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, ingredient.barcode, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expiring items found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpirationList, \"uMtY1mJVgguGfhq6h4p5o8ejUzk=\");\n_c = ExpirationList;\nexport default ExpirationList;\nvar _c;\n$RefreshReg$(_c, \"ExpirationList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExpirationList","_s","ingredients","setIngredients","get","then","response","data","Array","isArray","sortedIngredients","sort","a","b","Date","expiration_date","console","error","catch","getRowClass","expirationDate","today","expDate","diffDays","Math","ceil","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ingredient","className","ingredient_name","brand","expiring_servings","total_servings","toLocaleDateString","barcode","_c","$RefreshReg$"],"sources":["C:/Users/prat5/Documents/supabase-project/inventory-dashboard/src/components/ExpirationList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ExpirationList = () => {\r\n    const [ingredients, setIngredients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://127.0.0.1:8000/ingredients\")\r\n            .then((response) => {\r\n                if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\r\n                    const sortedIngredients = response.data.ingredients.sort((a, b) => \r\n                        new Date(a.expiration_date) - new Date(b.expiration_date)\r\n                    );\r\n                    setIngredients(sortedIngredients);\r\n                } else {\r\n                    console.error(\"Invalid data format:\", response.data);\r\n                    setIngredients([]);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching ingredients:\", error);\r\n                setIngredients([]);\r\n            });\r\n    }, []);\r\n\r\n    // Function to determine row color based on expiration date\r\n    const getRowClass = (expirationDate) => {\r\n        const today = new Date();\r\n        const expDate = new Date(expirationDate);\r\n        const diffDays = Math.ceil((expDate - today) / (1000 * 60 * 60 * 24));\r\n\r\n        if (diffDays < 7) return \"expiring-soon\"; // ðŸ”´ Red\r\n        if (diffDays <= 14) return \"expiring-warning\"; // ðŸŸ¡ Yellow\r\n        return \"\"; // Default (No color)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Expiration Tracking</h2>\r\n            {ingredients.length > 0 ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Brand</th>\r\n                            <th>Expiring Servings</th>\r\n                            <th>Total Servings</th>\r\n                            <th>Expiration Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ingredients.map((ingredient) => (\r\n                            <tr key={ingredient.barcode} className={getRowClass(ingredient.expiration_date)}>\r\n                                <td>{ingredient.ingredient_name}</td>\r\n                                <td>{ingredient.brand}</td>\r\n                                <td>{ingredient.expiring_servings}/{ingredient.total_servings}</td>\r\n                                <td>{ingredient.total_servings}</td>\r\n                                <td>{new Date(ingredient.expiration_date).toLocaleDateString()}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No expiring items found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpirationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}